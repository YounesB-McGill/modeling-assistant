/*
 * generated by Xtext 2.23.0
 */
grammar InternalLearningCorpusDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package modelingassistant.learningcorpus.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package modelingassistant.learningcorpus.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import modelingassistant.learningcorpus.dsl.services.LearningCorpusDSLGrammarAccess;

}
@parser::members {
	private LearningCorpusDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(LearningCorpusDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLearningCorpus
entryRuleLearningCorpus
:
{ before(grammarAccess.getLearningCorpusRule()); }
	 ruleLearningCorpus
{ after(grammarAccess.getLearningCorpusRule()); } 
	 EOF 
;

// Rule LearningCorpus
ruleLearningCorpus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLearningCorpusAccess().getGroup()); }
		(rule__LearningCorpus__Group__0)
		{ after(grammarAccess.getLearningCorpusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMistakeTypeCategory
entryRuleMistakeTypeCategory
:
{ before(grammarAccess.getMistakeTypeCategoryRule()); }
	 ruleMistakeTypeCategory
{ after(grammarAccess.getMistakeTypeCategoryRule()); } 
	 EOF 
;

// Rule MistakeTypeCategory
ruleMistakeTypeCategory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMistakeTypeCategoryAccess().getGroup()); }
		(rule__MistakeTypeCategory__Group__0)
		{ after(grammarAccess.getMistakeTypeCategoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMistakeType
entryRuleMistakeType
:
{ before(grammarAccess.getMistakeTypeRule()); }
	 ruleMistakeType
{ after(grammarAccess.getMistakeTypeRule()); } 
	 EOF 
;

// Rule MistakeType
ruleMistakeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMistakeTypeAccess().getGroup()); }
		(rule__MistakeType__Group__0)
		{ after(grammarAccess.getMistakeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLearningItem
entryRuleLearningItem
:
{ before(grammarAccess.getLearningItemRule()); }
	 ruleLearningItem
{ after(grammarAccess.getLearningItemRule()); } 
	 EOF 
;

// Rule LearningItem
ruleLearningItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLearningItemAccess().getGroup()); }
		(rule__LearningItem__Group__0)
		{ after(grammarAccess.getLearningItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningCorpus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LearningCorpus__Group__0__Impl
	rule__LearningCorpus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningCorpus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLearningCorpusAccess().getMistakeTypeCategoriesAssignment_0()); }
	(rule__LearningCorpus__MistakeTypeCategoriesAssignment_0)*
	{ after(grammarAccess.getLearningCorpusAccess().getMistakeTypeCategoriesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningCorpus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LearningCorpus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningCorpus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLearningCorpusAccess().getLearningItemsAssignment_1()); }
	(rule__LearningCorpus__LearningItemsAssignment_1)*
	{ after(grammarAccess.getLearningCorpusAccess().getLearningItemsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MistakeTypeCategory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group__0__Impl
	rule__MistakeTypeCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypeCategoryKeyword_0()); }
	'MistakeTypeCategory'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypeCategoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group__1__Impl
	rule__MistakeTypeCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getNameAssignment_1()); }
	(rule__MistakeTypeCategory__NameAssignment_1)
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group__2__Impl
	rule__MistakeTypeCategory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getGroup_2()); }
	(rule__MistakeTypeCategory__Group_2__0)?
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MistakeTypeCategory__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__0__Impl
	rule__MistakeTypeCategory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__1__Impl
	rule__MistakeTypeCategory__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesKeyword_2_1()); }
	'mistakeTypes'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__2__Impl
	rule__MistakeTypeCategory__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getWSTerminalRuleCall_2_2()); }
	(RULE_WS)*
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getWSTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__3__Impl
	rule__MistakeTypeCategory__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getLeftCurlyBracketKeyword_2_3()); }
	'{'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getLeftCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__4__Impl
	rule__MistakeTypeCategory__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesAssignment_2_4()); }
	(rule__MistakeTypeCategory__MistakeTypesAssignment_2_4)*
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeTypeCategory__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeCategoryAccess().getRightCurlyBracketKeyword_2_5()); }
	'}'
	{ after(grammarAccess.getMistakeTypeCategoryAccess().getRightCurlyBracketKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MistakeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeType__Group__0__Impl
	rule__MistakeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeAccess().getMistakeKeyword_0()); }
	'Mistake'
	{ after(grammarAccess.getMistakeTypeAccess().getMistakeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeType__Group__1__Impl
	rule__MistakeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeAccess().getNameAssignment_1()); }
	(rule__MistakeType__NameAssignment_1)
	{ after(grammarAccess.getMistakeTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeType__Group__2__Impl
	rule__MistakeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeAccess().getAtomicAssignment_2()); }
	(rule__MistakeType__AtomicAssignment_2)?
	{ after(grammarAccess.getMistakeTypeAccess().getAtomicAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeType__Group__3__Impl
	rule__MistakeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeAccess().getNumStepsBeforeNotificationAssignment_3()); }
	(rule__MistakeType__NumStepsBeforeNotificationAssignment_3)?
	{ after(grammarAccess.getMistakeTypeAccess().getNumStepsBeforeNotificationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MistakeType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMistakeTypeAccess().getLearningItemAssignment_4()); }
	(rule__MistakeType__LearningItemAssignment_4)
	{ after(grammarAccess.getMistakeTypeAccess().getLearningItemAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LearningItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LearningItem__Group__0__Impl
	rule__LearningItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLearningItemAccess().getLearningItemKeyword_0()); }
	'LearningItem'
	{ after(grammarAccess.getLearningItemAccess().getLearningItemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LearningItem__Group__1__Impl
	rule__LearningItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLearningItemAccess().getNameAssignment_1()); }
	(rule__LearningItem__NameAssignment_1)
	{ after(grammarAccess.getLearningItemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LearningItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLearningItemAccess().getDescriptionAssignment_2()); }
	(rule__LearningItem__DescriptionAssignment_2)
	{ after(grammarAccess.getLearningItemAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LearningCorpus__MistakeTypeCategoriesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLearningCorpusAccess().getMistakeTypeCategoriesMistakeTypeCategoryParserRuleCall_0_0()); }
		ruleMistakeTypeCategory
		{ after(grammarAccess.getLearningCorpusAccess().getMistakeTypeCategoriesMistakeTypeCategoryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningCorpus__LearningItemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLearningCorpusAccess().getLearningItemsLearningItemParserRuleCall_1_0()); }
		ruleLearningItem
		{ after(grammarAccess.getLearningCorpusAccess().getLearningItemsLearningItemParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeCategoryAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMistakeTypeCategoryAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeTypeCategory__MistakeTypesAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesMistakeTypeParserRuleCall_2_4_0()); }
		ruleMistakeType
		{ after(grammarAccess.getMistakeTypeCategoryAccess().getMistakeTypesMistakeTypeParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getMistakeTypeAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__AtomicAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeAccess().getAtomicAtomicKeyword_2_0()); }
		(
			{ before(grammarAccess.getMistakeTypeAccess().getAtomicAtomicKeyword_2_0()); }
			'atomic'
			{ after(grammarAccess.getMistakeTypeAccess().getAtomicAtomicKeyword_2_0()); }
		)
		{ after(grammarAccess.getMistakeTypeAccess().getAtomicAtomicKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__NumStepsBeforeNotificationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeAccess().getNumStepsBeforeNotificationINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getMistakeTypeAccess().getNumStepsBeforeNotificationINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MistakeType__LearningItemAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMistakeTypeAccess().getLearningItemLearningItemCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMistakeTypeAccess().getLearningItemLearningItemIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMistakeTypeAccess().getLearningItemLearningItemIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMistakeTypeAccess().getLearningItemLearningItemCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLearningItemAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getLearningItemAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningItem__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLearningItemAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLearningItemAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
